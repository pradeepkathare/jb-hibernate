Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.1.15.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@4232c52b
Adding type registration boolean -> org.hibernate.type.BooleanType@4232c52b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4232c52b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34cd072c
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30a3107a
Adding type registration yes_no -> org.hibernate.type.YesNoType@52feb982
Adding type registration byte -> org.hibernate.type.ByteType@2f943d71
Adding type registration byte -> org.hibernate.type.ByteType@2f943d71
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2f943d71
Adding type registration character -> org.hibernate.type.CharacterType@480bdb19
Adding type registration char -> org.hibernate.type.CharacterType@480bdb19
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@480bdb19
Adding type registration short -> org.hibernate.type.ShortType@4d50efb8
Adding type registration short -> org.hibernate.type.ShortType@4d50efb8
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d50efb8
Adding type registration integer -> org.hibernate.type.IntegerType@6f195bc3
Adding type registration int -> org.hibernate.type.IntegerType@6f195bc3
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f195bc3
Adding type registration long -> org.hibernate.type.LongType@3234e239
Adding type registration long -> org.hibernate.type.LongType@3234e239
Adding type registration java.lang.Long -> org.hibernate.type.LongType@3234e239
Adding type registration float -> org.hibernate.type.FloatType@1d8d30f7
Adding type registration float -> org.hibernate.type.FloatType@1d8d30f7
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d8d30f7
Adding type registration double -> org.hibernate.type.DoubleType@5bb21b69
Adding type registration double -> org.hibernate.type.DoubleType@5bb21b69
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5bb21b69
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1500955a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1500955a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45820e51
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45820e51
Adding type registration string -> org.hibernate.type.StringType@5bfbf16f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5bfbf16f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@27f723
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@46daef40
Adding type registration url -> org.hibernate.type.UrlType@5ed828d
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5ed828d
Adding type registration date -> org.hibernate.type.DateType@3aeaafa6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3aeaafa6
Adding type registration time -> org.hibernate.type.TimeType@eafc191
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@eafc191
Adding type registration timestamp -> org.hibernate.type.TimestampType@491cc5c9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@491cc5c9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@491cc5c9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@462d5aee
Adding type registration calendar -> org.hibernate.type.CalendarType@8646db9
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@8646db9
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@8646db9
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2db7a79b
Adding type registration locale -> org.hibernate.type.LocaleType@7cbd213e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cbd213e
Adding type registration currency -> org.hibernate.type.CurrencyType@33723e30
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33723e30
Adding type registration timezone -> org.hibernate.type.TimeZoneType@cb0ed20
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@cb0ed20
Adding type registration class -> org.hibernate.type.ClassType@32eebfca
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32eebfca
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1fc2b765
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1fc2b765
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@289d1c02
Adding type registration binary -> org.hibernate.type.BinaryType@2de8284b
Adding type registration byte[] -> org.hibernate.type.BinaryType@2de8284b
Adding type registration [B -> org.hibernate.type.BinaryType@2de8284b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@365185bd
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@365185bd
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@365185bd
Adding type registration row_version -> org.hibernate.type.RowVersionType@1990a65e
Adding type registration image -> org.hibernate.type.ImageType@544a2ea6
Adding type registration characters -> org.hibernate.type.CharArrayType@10dba097
Adding type registration char[] -> org.hibernate.type.CharArrayType@10dba097
Adding type registration [C -> org.hibernate.type.CharArrayType@10dba097
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2eda0940
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2eda0940
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2eda0940
Adding type registration text -> org.hibernate.type.TextType@67b467e9
Adding type registration ntext -> org.hibernate.type.NTextType@149494d8
Adding type registration blob -> org.hibernate.type.BlobType@2fd66ad3
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2fd66ad3
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17211155
Adding type registration clob -> org.hibernate.type.ClobType@71623278
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@71623278
Adding type registration nclob -> org.hibernate.type.NClobType@15bfd87
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15bfd87
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3d0f8e03
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2698dc7
Adding type registration serializable -> org.hibernate.type.SerializableType@5f71c76a
Adding type registration object -> org.hibernate.type.ObjectType@60438a68
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60438a68
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@dbd940d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71d15f18
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17695df3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c9f5c0d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@de3a06f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76b10754
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2bea5ab4
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d8314f0
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernatedb]
HHH10001001: Connection properties: {user=root, password=password}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 3 (min=1)
Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.24 (Revision: 4f7120a617b9d5efb9dedda9064b9896db424a60)
      major : 8
      minor : 0
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User_Collections_Join_Example
Bind entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example on table user_collections_join_example
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_collections_join_example), mappingColumn=userId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_collections_join_example), mappingColumn=address, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_collections_join_example), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_collections_join_example), mappingColumn=address, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_collections_join_example), mappingColumn=address_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='address_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='USER_COLLECTION_ANNOTATION_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address
Building property address
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_collections_join_example), mappingColumn=userName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example:userName]
building SimpleValue for userName
Building property userName
Starting fillSimpleValue for id
Starting fillSimpleValue for userName
Forcing column [userid] to be non-null as it is part of the primary key for table [user_collections_join_example]
Second pass for collection: learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address
Binding a collection of element: learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ADDRESS_JOINED), mappingColumn=area, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property area with lazy=false
Attempting to locate auto-apply AttributeConverter for property [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address.collection&&element:area]
building SimpleValue for area
Starting fillSimpleValue for area
Building property area
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ADDRESS_JOINED), mappingColumn=city, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property city with lazy=false
Attempting to locate auto-apply AttributeConverter for property [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address.collection&&element:city]
building SimpleValue for city
Starting fillSimpleValue for city
Building property city
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ADDRESS_JOINED), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address.collection&&element:id]
building SimpleValue for id
Starting fillSimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ADDRESS_JOINED), mappingColumn=pincode, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pincode with lazy=false
Attempting to locate auto-apply AttributeConverter for property [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address.collection&&element:pincode]
building SimpleValue for pincode
Starting fillSimpleValue for pincode
Building property pincode
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ADDRESS_JOINED), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address.collection&&element:state]
building SimpleValue for state
Starting fillSimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_collections_join_example), mappingColumn=addressID, insertable=true, updatable=true, unique=false}
building SimpleValue for null
Starting fillSimpleValue for null
Forcing column [addressid] to be non-null as it is part of the primary key for table [user_address_joined]
Mapped collection key: USER_COLLECTION_ANNOTATION_ID, element: area, city, id, pincode, state
Resolving reference to class: learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example
Resolving reference to class: learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hibernatedb, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, hbm2ddl.auto=update, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_65-b17, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, user.name=m, connection.driver_class=com.mysql.cj.jdbc.Driver, current_session_context_class=thread, user.language=en, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_65, user.timezone=, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, hibernate.format_sql=true, java.class.version=52.0, user.country=IN, connection.url=jdbc:mysql://localhost/hibernatedb, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e8dcdaa, path.separator=;, java.vm.version=25.65-b01, connection.password=password, hibernate.connection.password=password, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\m, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_65/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_65/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_65/bin/../jre/lib/amd64;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files\Java\jdk1.8.0_65\bin;F:\Program Files\PuTTY\;E:\SOFTWARE\apache-maven-3.6.3\bin;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;E:\jee-oxygen\eclipse;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=learning.hibernate.jb_hibernate.driver.C_12_DriverApp, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;E:\jee-oxygen\oxi-workspace-pradeep\jb-hibernate\target\classes;C:\Users\m\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\m\.m2\repository\mysql\mysql-connector-java\8.0.24\mysql-connector-java-8.0.24.jar;C:\Users\m\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\m\.m2\repository\org\hibernate\hibernate-core\5.1.15.Final\hibernate-core-5.1.15.Final.jar;C:\Users\m\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\m\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\m\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\m\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\m\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\m\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\m\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\m\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\m\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\m\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\m\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=3, java.io.tmpdir=C:\Users\m\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, user.dir=E:\jee-oxygen\oxi-workspace-pradeep\jb-hibernate, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, cache.provider_class=org.hibernate.cache.NoCacheProvider, file.encoding=UTF-8, format_sql=true, java.specification.version=1.8, hibernate.connection.pool_size=3, hibernate.show_sql=true}
Skipping JACC integration as it was not enabled
Not known whether passed class name [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example
Not known whether passed class name [learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example
Static SQL for collection: learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address
 Row insert: insert into USER_ADDRESS_JOINED (USER_COLLECTION_ANNOTATION_ID, addressID, area, city, id, pincode, state) values (?, ?, ?, ?, ?, ?, ?)
 Row update: update USER_ADDRESS_JOINED set area=?, city=?, id=?, pincode=?, state=? where addressID=?
 Row delete: delete from USER_ADDRESS_JOINED where addressID=?
 One-shot delete: delete from USER_ADDRESS_JOINED where USER_COLLECTION_ANNOTATION_ID=?
Static SQL for entity: learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example
 Version select: select userId from user_collections_join_example where userId =?
 Snapshot select: select user_colle_.userId, user_colle_.userName as userName2_1_ from user_collections_join_example user_colle_ where user_colle_.userId=?
 Insert 0: insert into user_collections_join_example (userName, userId) values (?, ?)
 Update 0: update user_collections_join_example set userName=? where userId=?
 Delete 0: delete from user_collections_join_example where userId=?
 Identity insert: insert into user_collections_join_example (userName) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56276db8]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@350ec41e]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1de5f0ef]
Visiting attribute path : address.area
Visiting attribute path : address.city
Visiting attribute path : address.id
Visiting attribute path : address.pincode
Visiting attribute path : address.state
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {USER_COL1_0_1_}
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - address1_

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [NONE]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_, address1_.USER_COLLECTION_ANNOTATION_ID as USER_COL1_0_1_, address1_.area as area2_0_1_, address1_.city as city3_0_1_, address1_.id as id4_0_1_, address1_.pincode as pincode5_0_1_, address1_.state as state6_0_1_, address1_.addressID as addressI7_1_ from user_collections_join_example user_colle0_ left outer join USER_ADDRESS_JOINED address1_ on user_colle0_.userId=address1_.USER_COLLECTION_ANNOTATION_ID where user_colle0_.userId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64beebb7]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bcec031]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@21005f6c]
Visiting attribute path : address.area
Visiting attribute path : address.city
Visiting attribute path : address.id
Visiting attribute path : address.pincode
Visiting attribute path : address.state
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {USER_COL1_0_1_}
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - address1_

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [READ]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_, address1_.USER_COLLECTION_ANNOTATION_ID as USER_COL1_0_1_, address1_.area as area2_0_1_, address1_.city as city3_0_1_, address1_.id as id4_0_1_, address1_.pincode as pincode5_0_1_, address1_.state as state6_0_1_, address1_.addressID as addressI7_1_ from user_collections_join_example user_colle0_ left outer join USER_ADDRESS_JOINED address1_ on user_colle0_.userId=address1_.USER_COLLECTION_ANNOTATION_ID where user_colle0_.userId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29ef6856]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3faf2e7d]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4648ce9]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [UPGRADE]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@569bf9eb]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@274872f8]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@76ba13c]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [UPGRADE_NOWAIT]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb6449b]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@180e6ac4]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@42b64ab8]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [UPGRADE_SKIPLOCKED]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e985ce9]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@410ae9a3]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@319988b0]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [FORCE]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5ae57e]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e242b4d]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@305f031]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [PESSIMISTIC_READ]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@592e843a]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423e4cbb]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6e16b8b5]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [PESSIMISTIC_WRITE]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b4fe19]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1536602f]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4ebea12c]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [PESSIMISTIC_FORCE_INCREMENT]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a1edad4]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44c79f32]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7fcbe147]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [OPTIMISTIC]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@235f4c10]
Visiting attribute path : address
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c7a975a]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2c1b9e4b]
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
    - Returns
       - EntityReturnImpl(entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example, querySpaceUid=<gen:0>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - CollectionAttributeFetchImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:1>, path=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
             - (collection element)     - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example)
          - SQL table alias mapping - user_colle0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_1_0_}

Static select for entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example [OPTIMISTIC_FORCE_INCREMENT]: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=?
Static select for action ACTION_MERGE on entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=?
Static select for action ACTION_REFRESH on entity learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example: select user_colle0_.userId as userId1_1_0_, user_colle0_.userName as userName2_1_0_ from user_collections_join_example user_colle0_ where user_colle0_.userId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71e5f61d]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2ce86164]
Visiting attribute path : area
Visiting attribute path : city
Visiting attribute path : id
Visiting attribute path : pincode
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
    - Returns
       - CollectionReturnImpl(collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address, querySpaceUid=<gen:0>, path=[learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address])
          - (collection element)     - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {USER_COL1_0_0_}
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - address0_

Static select for collection learning.hibernate.jb_hibernate.dto.User_Collections_Join_Example.address: select address0_.USER_COLLECTION_ANNOTATION_ID as USER_COL1_0_0_, address0_.area as area2_0_0_, address0_.city as city3_0_0_, address0_.id as id4_0_0_, address0_.pincode as pincode5_0_0_, address0_.state as state6_0_0_, address0_.addressID as addressI7_0_ from USER_ADDRESS_JOINED address0_ where address0_.USER_COLLECTION_ANNOTATION_ID=?
Instantiated session factory
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c177f9e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : hibernate_sequence
No alter strings for table : USER_ADDRESS_JOINED
No alter strings for table : user_collections_join_example
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56e07a08
Registering SessionFactory: fd6a17ac-280c-40c7-ae00-69c72a4df71e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
begin
Executing identity-insert immediately

    insert 
    into
        user_collections_join_example
        (userName) 
    values
        (?)
could not execute statement [n/a]
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'userName' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2919)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3490)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:626)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:280)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:261)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:306)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:318)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:275)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:182)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:113)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:682)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:674)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:669)
	at learning.hibernate.jb_hibernate.driver.C_12_DriverApp.main(C_12_DriverApp.java:51)
SQL Error: 1406, SQLState: 22001
Data truncation: Data too long for column 'userName' at row 1
